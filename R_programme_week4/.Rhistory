mean(y,na.rm=TRUE)
pollutantmean("specdata","sulfate",1:2)
pollutantmean("specdata","sulfate",1:2)
pollutantmean("specdata","sulfate",1:2)
View(getMean_Singel)
View(pollutantmean)
View(pollutantmean)
View(str_c_To3)
View(str_c_To3)
View(pollutantmean)
View(pollutantmean)
mean_result<-read.csv("specdata/001.csv")
p<-"sulfate"
mean(mean_result[[p]])
mean(mean_result[[p]],rm.na=TRUE)
View(pollutantmean)
View(pollutantmean)
View(getMean_Singel)
View(getMean_Singel)
mean(mean_result[[p]],na.rm=TRUE)
str_c_To3(1)
str_c_To3(1)
x<-str_c_To3(1)
x
str_c("XXX",1)
View(str_c_To3)
View(str_c_To3)
View(str_c_To3)
View(str_c_To3)
View(str_c_To3)
View(str_c_To3)
source('~/pollutantmean.R')
View(str_c_To3)
View(str_c_To3)
result<-str_c("0",id)
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(id){
result<-read.csv(directory,"/",id,".csv")
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
pollutantmean<- function(directory,pollutant,id=1:332){
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(id){
result<-read.csv(directory,"/",id,".csv")
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
}
pollutantmean<- function(directory,pollutant,id=1:332){
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(id){
result<-read.csv(directory,"/",id,".csv")
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
}
View(str_c_To3)
View(str_c_To3)
str_c_To3(1)
pollutantmean("specdata","sulfate",1:2)
source('~/pollutantmean.R')
View(getMean_Singel)
View(getMean_Singel)
#计算单个文件mean
getMean_Singel<-function(directory,pollutant,id){
result<-read.csv(directory,"/",id,".csv")
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
pollutantmean<- function(directory,pollutant,id=1:332){
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(directory,pollutant,id){
result<-read.csv(directory,"/",id,".csv")
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
}
View(getMean_Singel)
View(getMean_Singel)
getMean_Singel("specdata","sulfate",1)
getMean_Singel("specdata","sulfate",str_c_To3(1))
getMean_Singel("specdata","sulfate",str_c_To3(1))
source('~/pollutantmean.R')
getMean_Singel("specdata","sulfate",str_c_To3(1))
result<-read.csv(str_c("specdata","/","001",".csv"))
result
source('~/pollutantmean.R')
getMean_Singel("specdata","sulfate",str_c_To3(1))
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
getMean_Singel("specdata","sulfate",str_c_To3(1))
source('~/pollutantmean.R')
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(directory,pollutant,id){
result<-read.csv(str_c(directory,"/",id,".csv"))
##mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
getMean_Singel("specdata","sulfate",str_c_To3(1))
source('~/pollutantmean.R')
source('~/pollutantmean.R')
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
#计算单个文件mean
getMean_Singel<-function(directory,pollutant,id){
result<-read.csv(str_c(directory,"/",id,".csv"))
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
pollutantmean<- function(directory,pollutant,id=1:332){
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(directory,pollutant,id){
result<-read.csv(str_c(directory,"/",id,".csv"))
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
}
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
result<-read.csv(str_c(directory,"/",id,".csv"))
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
#计算单个文件mean
getMean_Singel<-function(id){
result<-read.csv(str_c(directory,"/",id,".csv"))
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
pollutantmean<- function(directory,pollutant,id=1:332){
library(stringr)
##读取相应id（vector）monitor数据
##计算mean值并返回
result_totall<-c()
#字符串连接为三个
str_c_To3<-function(id){
if(id<10){
result<-str_c("00",id)
}
if(id>=10 && id<100){
result<-str_c("0",id)
}
result
}
#计算单个文件mean
getMean_Singel<-function(id){
result<-read.csv(str_c(directory,"/",id,".csv"))
mean_result<-mean(result[[pollutant]],na.rm=TRUE)
}
for (x in id){
result_totall<-c(result_totall,getMean_Singel(str_c_To3(x)))
}
mean(result_totall)
}
pollutantmean("specdata","sulfate",1:2)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
set.seed(1)
rpois(5,2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
y<-1
x1<-1
x2<-1
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
$by.total
$by.total
summaryRprof()$by.total
summaryRprof()$by.total$total.time
library(swirl)
install.packages(swirl)
install.packages("swirl")
library(swirl)
swirl()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,1,0.7)
flips2
sum(flips2)
rnorm()
info*()
info()
?rnorm
rnorm(1)
rnorm(10)
rnorm(10,100,25)
?rpois
ropis()
?rpois
info()
skip()
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_Pois)
cm<-colMeans(my_pois)
cm
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=car$speed,y=car$dist)
plot(x=cars$speed,y=cars$dist)
plot(dist~speed,cars)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dict,"Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab = "Speed", ylab = "Stopping Distance")
plot(cars,main="My Plot")
skip()
skip()
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
getwd()
ls()
ls
dir()
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
outcome
head(outcome)
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
names(outcome)
state<-outcome[,5]
head(state)
state
state<-outcome[,7]
state
hist(state)
xx<-state[which(state$State=="AL")]
xx<-outcome[which(outcome$State=="AL")]
xx<-outcome[which(outcome[,7]=="AL")]
xx<-outcome$State
which(xx=="AL")
yy<-which(xx=="AL")
outcome[yy]
outcome[yy,]
xx<-outcome[which(outcome$State=="AL"),]
head(xx)
outcome
outcome1<-order(outcome[,1])
outcome1
outcome1<-outcome[,1]
outcome2<-which(outcome1=max(outcome1),arr.ind = TRUE)
outcome1
outcome2<-which(outcome1==max(outcome1),arr.ind = TRUE)
outcome2
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
x<-"xxxxx"
y<-"xxxxx"
x==y
x<-"heart attack"
y<-"heart attack"
x==y
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-outcome1[which(outcome1$State==state),]
state_Vector[,11]
min(state_Vector[,11])
xx<-state_Vector[,11]
class(xx)
as.ordered(xx)
summary(xx)
min(xx)
as.array(xx)
min(xx)
min(as.array(xx))
min(as.vector(xx))
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
out<-state_Vector[,11]
class(out)
out<-as.vector((state_Vector[,11]))
class(out)
type(out)
head(out)
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
names(state_Vector)
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
best("TX", "heart failure")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX", "heart failure")
source('~/best.R')
best("TX", "heart failure")
best("MD", "heart attack")
source('~/best.R')
source('~/best.R')
best("MD", "heart attack")
source('~/best.R')
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
getwd()
setwd("/Users/fotoable/datasciencecoursera/R_programme_week4")
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('~/datasciencecoursera/R_programme_week4/rankall.R')
head(rankall("heart attack", 20), 10)
best("SC", "heart attack")
source('~/datasciencecoursera/R_programme_week4/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
r
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
r
r <- rankall("heart failure", 10)
r
