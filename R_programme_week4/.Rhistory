pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc
cc <- complete("specdata", 54)
cc
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete("specdata", 332:1)
cc
use
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
source('E:/Rcode/coor.R')
source('E:/Rcode/coor.R')
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
pollutantmean("specdata", "sulfate", 34)
source('E:/Rcode/coor.R')
getwd()
ls
dir()
setwd(dir = "E:\Rcode\R_programme_week4")
setwd(dir = "E:/Rcode/R_programme_week4")
getwd()
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart attack", "worst")
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", "best")
source('E:/Rcode/R_programme_week4/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
string<-c("A","bbbbb","Caasfs","wad","eee")
as.ordered(string)
as.ordered(string)$Levels
class(as.ordered(string))
best("MD", "pneumonia")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State=="MD"),])
head(state_Vector)
head(state_Vector(,23))
head(state_Vector[,23])
min(head(state_Vector[,23]))
min(as.vector(head(state_Vector[,23])))
xxx<-as.vector(head(state_vector[,23]))
xxx<-as.vector(head(state_vector[,23]))
xxx<-as.vector((state_vector[,23]))
state_Vector<-as.vector(outcome1[which(outcome1$State=="MD"),])
class(state_Vector)
class(state_vector[,17])
class(state_Vector)
yy<-state_Vector[,23]
class(yy)
xx<-as.vector(yy)
xx
min(xx)
which.min(xx)
?min
min(xx,na.rm=TRUE)
pmin(xx)
min(xx)
source('E:/Rcode/R_programme_week4/best.R')
source('E:/Rcode/R_programme_week4/best.R')
best("MD", "pneumonia")
best("MD", "heart attack")
source('E:/Rcode/R_programme_week4/best.R')
source('E:/Rcode/R_programme_week4/best.R')
source('E:/Rcode/R_programme_week4/best.R')
best("MD", "pneumonia")
source('E:/Rcode/R_programme_week4/best.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
a<-c(12.5 12.7 13.0 9.6  9.8  11.5)
a<-(111,22,122,3232)
a<-c(111,22,122,3232)
order(a)
order(a)[1]
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('E:/Rcode/R_programme_week4/rankhospital.R')
min_Vector<-as.vector(state_Vector[,11])
min_Vector<-as.vector(state_Vector[,17])
head(order(min_Vector))
state_Vector[14,2]
state_Vector[22,2]
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State=="TX"),])
min_Vector<-as.vector(state_Vector[,17])
head(order(min_Vector))
state_Vector[297,2]
head(order(min_Vector,decreasing = TRUE))
state_Vector[144,2]
rank(min_Vector)
head(min_Vector)
rank(head(min_Vector))
head(rank(min_Vector))
which(rank(min_Vector)==1)
which(rank(min_Vector)==1.0)
which(rank(min_Vector)==262)
which(rank(min_Vector)==1.5)
sort(min_Vector)
order(min_Vector,)
xxxx<-as.numeric(min_Vector)
xxxx
head(order(xxxx))
state_Vector[210,17]
state_Vector[210,2]
head(order(xxxx),decreasing=FALSE)
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 5)
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", 1)
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('E:/Rcode/R_programme_week4/rankhospital.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
print enum
print (enum)
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
source('~/datasciencecoursera/R_programme_week4/rankall.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,17])[!enum_index]
print (enum)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,7])[!enum_index]
print (enum)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
#library
library("rankhospital.R")
source('~/datasciencecoursera/R_programme_week4/rankall.R')
#library
library(rankhospital.R)
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,7])[!enum_index]
print (enum)
}
?apply
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,7])[!enum_index]
print (enum)
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,7])[!enum_index]
print (enum)
#use the lapply of the function of rankhospital.R
result<-apply(enum,rankhospital,outcome,num)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.vector(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,rankhospital,outcome,num)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
rankall <- function(outcome, num = "best") { ## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the ## (abbreviated) state name
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
}
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,enum,outcome,num)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
rankall <- function(outcome, num = "best") { ## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the ## (abbreviated) state name
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
}
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.matrix(outcome1[,7])[!enum_index]
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
enum<-as.matrix(enum)
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
rankall <- function(outcome, num = "best") { ## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the ## (abbreviated) state name
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
enum<-as.matrix(enum)
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
}
source('~/datasciencecoursera/R_programme_week4/rankall.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
print(output)
##also
## result<-apply(enum,2,rankhospital,outcome,num)
}
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
enum<-as.matrix(enum)
print (enum)
print(dim(enum))
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
output<-rbind(enum,result)
print(output)
##also
## result<-apply(enum,2,rankhospital,outcome,num)
}
source('~/datasciencecoursera/R_programme_week4/rankall.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
print(result)
output<-cbind(as.vector(enum),result)
print(output)
#use the lapply of the function of rankhospital.R
result<-apply(enum,1,rankhospital,outcome,num)
print(result)
output<-cbind(as.vector(enum),result)
print(output)
##also
## result<-apply(enum,2,rankhospital,outcome,num)
}
source('~/datasciencecoursera/R_programme_week4/rankall.R')
##get the enum of State Vector of State
##use the lapply
##the function  rankhospital.function
##get the index in the origin DataFrame
outcome<-"heart attack"
num<-"best"
#library
source('~/datasciencecoursera/R_programme_week4/rankhospital.R')
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
enum_index<-duplicated(as.vector(outcome1[,7]))
enum<-as.array(outcome1[,7])[!enum_index]
print (enum)
#use the lapply of the function of rankhospital.R
result<-apply(enum,2,rankhospital,outcome,num)
print(result)
output<-cbind(as.vector(enum),result)
print(output)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
#use the lapply of the function of rankhospital.R
result<-apply(enum,2,rankhospital,outcome,num)
print(result)
output<-cbind(as.vector(enum),as.character(result))
print(output)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
source('~/datasciencecoursera/R_programme_week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("WA", "heart attack", 6)
rankhospital("TX", "pneumonia", 10)
rankhospital("TX", "pneumonia", 9)
rankhospital("NY", "heart attack", 7)
rankhospital("NY", "heart attack", 6)
source('~/datasciencecoursera/R_programme_week4/rankall.R')
