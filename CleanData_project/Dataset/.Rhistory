plot(cars,main="My Plot")
skip()
skip()
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
getwd()
ls()
ls
dir()
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
outcome
head(outcome)
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
names(outcome)
state<-outcome[,5]
head(state)
state
state<-outcome[,7]
state
hist(state)
xx<-state[which(state$State=="AL")]
xx<-outcome[which(outcome$State=="AL")]
xx<-outcome[which(outcome[,7]=="AL")]
xx<-outcome$State
which(xx=="AL")
yy<-which(xx=="AL")
outcome[yy]
outcome[yy,]
xx<-outcome[which(outcome$State=="AL"),]
head(xx)
outcome
outcome1<-order(outcome[,1])
outcome1
outcome1<-outcome[,1]
outcome2<-which(outcome1=max(outcome1),arr.ind = TRUE)
outcome1
outcome2<-which(outcome1==max(outcome1),arr.ind = TRUE)
outcome2
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
x<-"xxxxx"
y<-"xxxxx"
x==y
x<-"heart attack"
y<-"heart attack"
x==y
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-outcome1[which(outcome1$State==state),]
state_Vector[,11]
min(state_Vector[,11])
xx<-state_Vector[,11]
class(xx)
as.ordered(xx)
summary(xx)
min(xx)
as.array(xx)
min(xx)
min(as.array(xx))
min(as.vector(xx))
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
out<-state_Vector[,11]
class(out)
out<-as.vector((state_Vector[,11]))
class(out)
type(out)
head(out)
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
outcome1<-read.csv("outcome-of-care-measures.csv")
#get the state
state_Vector<-as.vector(outcome1[which(outcome1$State==state),])
names(state_Vector)
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
best("TX", "heart failure")
source('~/best.R')
source('~/best.R')
source('~/best.R')
best("TX", "heart failure")
source('~/best.R')
best("TX", "heart failure")
best("MD", "heart attack")
source('~/best.R')
source('~/best.R')
best("MD", "heart attack")
source('~/best.R')
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "/Users/fotoable/test.csv",method="curl")
result<-read.csv("/Users/fotoable/test.csv")
head(result)
names(result)
logic1<-result$ACR==3
head(logic1)
logic2<-(result$ACR==3)&(result$AGS==6)
head(logic2)
which(logic2)
dim(logic2)
str(logic2)
str(result)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "/Users/fotoable/test.jpeg",method = "curl")
readJPEG("/Users/fotoable/test.jpeg",native=TRUE)
jpeg<-readJPEG("/Users/fotoable/test.jpeg",native=TRUE)
head(jpeg)
summary(jpeg)
names(jpeg)
dim(jpeg)
quantile(jpeg)
quantile(jpeg,probs = c(0.3,0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "/Users/fotoable/A.csv",method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile = "/Users/fotoable/B.csv",method = "curl")
a<-read.csv("A.csv")
b<-read.csv("B.csv")
names(a)
names(b)
dim(a)
dim(b)
head(a,3)
head(b,3)
head(a,6)
mergedata<-merge(a,b,b.x="CountryCode",all=FALSE)
dim(mergedata)
head(mergedata,4)
merge1<-merge(a,b,all=FALSE)
dim(merge1)
merge1<-merge(a,b,all=TRUE)
dim(merge1)
sum1<-(a$Gross.domestic.product.2012 %in5 b$CountryCode)
a$Gross.domestic.product.2012 %in% b$CountryCode
names(a)
head(a,5)
a$X %in% b$CountryCode
result1<-( a$X %in% b$CountryCode)
sum(result1==TRUE)
result1<-( b$CountryCode %in% a$X)
sum(result==TRUE)
head(result1)
sum(result==TRUE,na.rm = TRUE)
dim(b)
sum(result1==TRUE,na.rm = TRUE)
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "/Users/fotoable/2.csv",method = "curl")
re2<-read.csv("2.csv")
head(re2.4)
head(re2,2)
head(re2,4)
head(re2,5)
names(re2)
re2[,5]
re2[[10,],5]
re2[10:,5]
re2[c(10:length(re2)),5]
cosss<-re[,5]
cosss<-re2[,5]
cosss
cosss[3]
cosss[4]
cosss[5]
number_str<-re2[c(5:length(re2)),5]
number_str
class(number_str)
gsub(",","",number_str)
length(re2)
dim(re2)
dim(re2)[1]
number_str<-re2[c(5:dim(re2)[1]),5]
number_str
gsub(",","",number_str)
result<-gsub(",","",number_str)
result<-result[which(result!="")]
result
result<-result[which(result!="..")]
result
result<-as.numeric(result)
result
mean(result)
mean(result[1:190])
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
setwd("~/datasciencecoursera/CleanData_project/Dataset")
#load the features.txt and use grep to distract the index of mean and divation
features<-read.table("features.txt")
features_v2<-features$V2
mean_std_index<-grep("mean[()]|std[()]",features_v2,value = F)
#test
test_subject<-read.table("test/subject_test.txt")
test_x<-read.table("test/X_test.txt")
test_y<-read.table("test/Y_test.txt")
test_x_mean_std<-test_x[,mean_std_index]
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
}
}
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
}
}
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#test
test_subject<-read.table("test/subject_test.txt")
test_x<-read.table("test/X_test.txt")
test_y<-read.table("test/Y_test.txt")
test_x_mean_std<-test_x[,mean_std_index]
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#get a new dataset of testData subject_id,mean,std....66... activity,train/test
#get a new dataset of trainData subject_id,mean,std....66... activity,train/test
#merge it
}
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
train_x_mean_std<-train_x[,mean_std_index]
#create a Vector of subject_type
subect_type<-rep("test",length(test_x_mean_std))
#get a new dataset of trainData subject_id,mean,std....66... activity,train/test
#merge it
}
sugect_type
setwd("~/datasciencecoursera/CleanData_project/Dataset")
#load the features.txt and use grep to distract the index of mean and divation
features<-read.table("features.txt")
features_v2<-features$V2
mean_std_index<-grep("mean[()]|std[()]",features_v2,value = F)
#test
test_subject<-read.table("test/subject_test.txt")
test_x<-read.table("test/X_test.txt")
test_y<-read.table("test/Y_test.txt")
test_x_mean_std<-test_x[,mean_std_index]
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#create a Vector of subject_type
subect_type<-rep("test",length(test_x_mean_std))
subect_type
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
train_x_mean_std<-train_x[,mean_std_index]
#create a Vector of subject_type
subject_type<-rep("test",length(test_x_mean_std))
DataFrame_test<-data.frame(subject_type,test_subject,test_x_mean_std)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
DataFrame_test<-data.frame(subject_type,test_subject)
train_x_mean_std<-train_x[,mean_std_index]
#create a Vector of subject_type
subject_type<-rep("test",length(test_x_mean_std))
DataFrame_test<-data.frame(subject_type,test_subject)
dim(subject_type)
length(subect_type)
dim(test_subject)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#create a Vector of subject_type
subject_type<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type,test_subject)
DataFrame_test
tail(DataFrame_test)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
DataFrame_test<-data.frame(subject_type,test_subject,test_x_mean_std)
head(DataFrame_test)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
mean_std_index<-grep("mean[()]|std[()]",features_v2,value = F)
mean_std_info<-grep("mean[()]|std[()]",features_v2,value = T)
head(mean_std_info)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#create the rowNames
Data_row_names<-c("subject_type","subject_id",mean_std_info)
Data_row_names
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#create the rowNames
Data_row_names<-c("subject_type","subject_id",mean_std_info)
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_x_mean_std,row.names = Data_row_names)
########get a new dataset of trainData subject_id,mean,std....66... activity,train/test#######
subject_type2<-rep("test",length(train_subject))
DataFrame_test<-data.frame(subject_type2,train_subject,train_x_mean_std,row.names = Data_row_names)
length(Data_row_names)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
dim(DataFrame_test)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
DataFrame_test<-data.frame(subject_type1,test_subject,test_x_mean_std,names= Data_row_names)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#create the rowNames
Data_column_names<-c("subject_type","subject_id",mean_std_info)
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
head(DataFrame_test)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
########get a new dataset of trainData subject_id,mean,std....66... activity,train/test#######
subject_type2<-rep("test",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_x_mean_std)
#merge it
}
head(DataFrame_train)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
DataFrame_train<-data.frame(subject_type2,train_subject,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
head(DataFrame_train)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
########get a new dataset of trainData subject_id,mean,std....66... activity,train/test#######
subject_type2<-rep("train",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
#merge it
}
head(DataFrame_train)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#create the rowNames
Data_column_names<-c("subject_type","subject_id","activity_type",mean_std_info)
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_y,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
########get a new dataset of trainData subject_id,mean,std....66... activity,train/test#######
subject_type2<-rep("train",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_y,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
head(DataFrame_test)
head(DataFrame_train)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#merge it
Data_all_subject<-merge(DataFrame_test,DataFrame_train)
dim(Data_all_subject)
head(Data_all_subject)
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#merge it
Data_all_subject<-merge(DataFrame_test,DataFrame_train,by=inserct(names(DataFrame_test),names(DataFrame_train)))
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#merge it
Data_all_subject<-merge(DataFrame_test,DataFrame_train,by=intersect(names(DataFrame_test),names(DataFrame_train)))
run_analysis<-function(){
setwd("~/datasciencecoursera/CleanData_project/Dataset")
#load the features.txt and use grep to distract the index of mean and divation
features<-read.table("features.txt")
features_v2<-features$V2
mean_std_index<-grep("mean[()]|std[()]",features_v2,value = F)
mean_std_info<-grep("mean[()]|std[()]",features_v2,value = T)
#test
test_subject<-read.table("test/subject_test.txt")
test_x<-read.table("test/X_test.txt")
test_y<-read.table("test/Y_test.txt")
test_x_mean_std<-test_x[,mean_std_index]
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#create the rowNames
Data_column_names<-c("subject_type","subject_id","activity_type",mean_std_info)
#get a new dataset of testData subject_id,mean,std....66... activity,train/test
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_y,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
#get a new dataset of trainData subject_id,mean,std....66... activity,train/test
subject_type2<-rep("train",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_y,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
#merge it
Data_all_subject<-merge(DataFrame_test,DataFrame_train,by=intersect(names(DataFrame_test),names(DataFrame_train)))
}
Data_all_subject
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#create the rowNames
Data_column_names<-c("subject_type","subject_id","activity_type",mean_std_info)
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_y,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
#get a new dataset of trainData subject_id,mean,std....66... activity,train/test
subject_type2<-rep("train",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_y,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
#merge it
Data_all_subject<-rbind(DataFrame_test,DataFrame_train)
run_analysis<-function(){
setwd("~/datasciencecoursera/CleanData_project/Dataset")
#load the features.txt and use grep to distract the index of mean and divation
features<-read.table("features.txt")
features_v2<-features$V2
mean_std_index<-grep("mean[()]|std[()]",features_v2,value = F)
mean_std_info<-grep("mean[()]|std[()]",features_v2,value = T)
#test
test_subject<-read.table("test/subject_test.txt")
test_x<-read.table("test/X_test.txt")
test_y<-read.table("test/Y_test.txt")
test_x_mean_std<-test_x[,mean_std_index]
#train
train_subject<-read.table("train/subject_train.txt")
train_x<-read.table("train/X_train.txt")
train_y<-read.table("train/Y_train.txt")
train_x_mean_std<-train_x[,mean_std_index]
#create the rowNames
Data_column_names<-c("subject_type","subject_id","activity_type",mean_std_info)
#get a new dataset of testData subject_id,mean,std....66... activity,train/test
#create a Vector of subject_type
subject_type1<-rep("test",length(test_subject))
DataFrame_test<-data.frame(subject_type1,test_subject,test_y,test_x_mean_std)
colnames(DataFrame_test)<-Data_column_names
#get a new dataset of trainData subject_id,mean,std....66... activity,train/test
subject_type2<-rep("train",length(train_subject))
DataFrame_train<-data.frame(subject_type2,train_subject,train_y,train_x_mean_std)
colnames(DataFrame_train)<-Data_column_names
#merge it
Data_all_subject<-rbind(DataFrame_test,DataFrame_train)
}
Dim(Data_all_subject)
dim(Data_all_subject)
head(Data_all_subject)
tail(Data_all_subject)
dim(DataFrame_test)
dim(DataFrame_train)
x<-7352+2947
x
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
source('~/datasciencecoursera/CleanData_project/Dataset/analysis1.R')
